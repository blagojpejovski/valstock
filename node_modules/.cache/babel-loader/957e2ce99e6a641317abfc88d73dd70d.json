{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blago\\\\Desktop\\\\valtech-task\\\\valstock\\\\src\\\\components\\\\Dialog\\\\Dialog.js\",\n    _s = $RefreshSig$();\n\nimport \"./Dialog.css\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openDialog, createAlbum, addPictureToAlbum } from \"../../redux/album/albumSlice\";\nimport { setNotification } from \"../../redux/notification/notificationSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialog = () => {\n  _s();\n\n  const visible = useSelector(state => state.album.dialogVisible);\n  const albums = useSelector(state => state.album.albums);\n  const dispatch = useDispatch();\n  const [albumTitle, setAlbumTitle] = useState(\"\");\n  const [creatingNew, setCreatingNew] = useState(true);\n  const [selectedAlbumId, setSelectedAlbumId] = useState(albums.length ? albums[0].id : 0);\n\n  const handleSave = () => {\n    if (creatingNew) {\n      dispatch(createAlbum({\n        name: albumTitle\n      }));\n    } else {\n      dispatch(addPictureToAlbum({\n        albumId: selectedAlbumId\n      }));\n    }\n\n    dispatch(openDialog({\n      dialogVisible: false\n    }));\n    dispatch(setNotification({\n      open: true\n    }));\n    setTimeout(() => {\n      dispatch(setNotification({\n        open: false\n      }));\n    }, 2000);\n    setAlbumTitle(\"\");\n    setSelectedAlbumId(albums.length ? albums[0].id : 0);\n    setCreatingNew(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialog-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dialog-container ${!visible && \"dialog-container-hidden\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dialog-items\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: creatingNew ? \"tabs-button-label-selected\" : \"tabs-button-label\",\n            onClick: () => {\n              setCreatingNew(true);\n            },\n            children: \"CREATE NEW ALBUM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: !creatingNew ? \"tabs-button-label-selected\" : \"tabs-button-label\",\n            onClick: () => {\n              setCreatingNew(false);\n            },\n            children: \"ADD TO EXISTING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          onChange: e => setAlbumTitle(e.target.value),\n          value: albumTitle,\n          placeholder: \"Enter title here\",\n          className: `dialog-input ${!creatingNew && \"hidden\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `album-list-container ${creatingNew && \"hidden\"}`,\n          children: albums.map(album => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"20px\"\n            },\n            className: `album-dropdown-item ${creatingNew && \"hidden\"} ${selectedAlbumId === album.id && \"selected\"}`,\n            onClick: () => {\n              setSelectedAlbumId(album.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: album.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)\n          }, album.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialog-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-white\",\n            onClick: () => {\n              dispatch(openDialog({\n                dialogVisible: false\n              }));\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button-dark\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dialog, \"m90JIzjBQhYU/z/Wj04wKrNuUu8=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Dialog;\nexport default Dialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"sources":["C:/Users/blago/Desktop/valtech-task/valstock/src/components/Dialog/Dialog.js"],"names":["useState","useDispatch","useSelector","openDialog","createAlbum","addPictureToAlbum","setNotification","Dialog","visible","state","album","dialogVisible","albums","dispatch","albumTitle","setAlbumTitle","creatingNew","setCreatingNew","selectedAlbumId","setSelectedAlbumId","length","id","handleSave","name","albumId","open","setTimeout","e","target","value","map","fontSize"],"mappings":"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","sourcesContent":["import \"./Dialog.css\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    openDialog,\r\n    createAlbum,\r\n    addPictureToAlbum,\r\n} from \"../../redux/album/albumSlice\";\r\nimport { setNotification } from \"../../redux/notification/notificationSlice\";\r\n\r\nconst Dialog = () => {\r\n    const visible = useSelector((state) => state.album.dialogVisible);\r\n    const albums = useSelector((state) => state.album.albums);\r\n    const dispatch = useDispatch();\r\n\r\n    const [albumTitle, setAlbumTitle] = useState(\"\");\r\n    const [creatingNew, setCreatingNew] = useState(true);\r\n    const [selectedAlbumId, setSelectedAlbumId] = useState(\r\n        albums.length ? albums[0].id : 0\r\n    );\r\n\r\n    const handleSave = () => {\r\n        if (creatingNew) {\r\n            dispatch(\r\n                createAlbum({\r\n                    name: albumTitle,\r\n                })\r\n            );\r\n        } else {\r\n            dispatch(\r\n                addPictureToAlbum({\r\n                    albumId: selectedAlbumId,\r\n                })\r\n            );\r\n        }\r\n        dispatch(\r\n            openDialog({\r\n                dialogVisible: false,\r\n            })\r\n        );\r\n        dispatch(\r\n            setNotification({\r\n                open: true,\r\n            })\r\n        );\r\n        setTimeout(() => {\r\n            dispatch(\r\n                setNotification({\r\n                    open: false,\r\n                })\r\n            );\r\n        }, 2000);\r\n        setAlbumTitle(\"\");\r\n        setSelectedAlbumId(albums.length ? albums[0].id : 0);\r\n        setCreatingNew(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {visible && <div className=\"dialog-background\"></div>}\r\n            <div\r\n                className={`dialog-container ${\r\n                    !visible && \"dialog-container-hidden\"\r\n                }`}\r\n            >\r\n                <div className=\"dialog-items\">\r\n                    <div className=\"tabs-button\">\r\n                        <button\r\n                            className={\r\n                                creatingNew\r\n                                    ? \"tabs-button-label-selected\"\r\n                                    : \"tabs-button-label\"\r\n                            }\r\n                            onClick={() => {\r\n                                setCreatingNew(true);\r\n                            }}\r\n                        >\r\n                            CREATE NEW ALBUM\r\n                        </button>\r\n                        <button\r\n                            className={\r\n                                !creatingNew\r\n                                    ? \"tabs-button-label-selected\"\r\n                                    : \"tabs-button-label\"\r\n                            }\r\n                            onClick={() => {\r\n                                setCreatingNew(false);\r\n                            }}\r\n                        >\r\n                            ADD TO EXISTING\r\n                        </button>\r\n                    </div>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"title\"\r\n                        name=\"title\"\r\n                        onChange={(e) => setAlbumTitle(e.target.value)}\r\n                        value={albumTitle}\r\n                        placeholder=\"Enter title here\"\r\n                        className={`dialog-input ${!creatingNew && \"hidden\"}`}\r\n                    />\r\n                    <div\r\n                        className={`album-list-container ${\r\n                            creatingNew && \"hidden\"\r\n                        }`}\r\n                    >\r\n                        {albums.map((album) => (\r\n                            <div\r\n                                key={album.id}\r\n                                style={{ fontSize: \"20px\" }}\r\n                                className={`album-dropdown-item ${\r\n                                    creatingNew && \"hidden\"\r\n                                } ${\r\n                                    selectedAlbumId === album.id && \"selected\"\r\n                                }`}\r\n                                onClick={() => {\r\n                                    setSelectedAlbumId(album.id);\r\n                                }}\r\n                            >\r\n                                <span>{album.name}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"dialog-buttons\">\r\n                        <button\r\n                            className=\"button-white\"\r\n                            onClick={() => {\r\n                                dispatch(\r\n                                    openDialog({\r\n                                        dialogVisible: false,\r\n                                    })\r\n                                );\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"button-dark\"\r\n                            onClick={handleSave}\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialog;\r\n"]},"metadata":{},"sourceType":"module"}