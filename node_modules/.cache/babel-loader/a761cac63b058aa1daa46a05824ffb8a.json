{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blago\\\\Desktop\\\\valtech-task\\\\valstock\\\\src\\\\pages\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport \"./Login.css\";\nimport LoginFooter from \"./LoginFooter/LoginFooter\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setNotification } from \"../../redux/notification/notificationSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport Gallery from \"../Gallery/Gallery\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport { setLogin } from \"../../redux/login/loginSlice\"; // In a real app, we would make a request to backend to login, but here we are using predefined values to mimic a login functionality\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USERNAME = \"blagojpejovski\";\nconst PASSWORD = \"valstock123\";\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [isError, setIsError] = useState(false);\n  const [isLogged, setIsLogged] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    setUser(prevUser => ({ ...prevUser,\n      [e.target.name]: e.target.value\n    }));\n    setIsError(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (user.username === USERNAME && user.password === PASSWORD) {\n      dispatch(setNotification({\n        open: true\n      }));\n      setTimeout(() => {\n        dispatch(setNotification({\n          open: false\n        }));\n      }, 2000);\n      navigate(\"/gallery\");\n      dispatch(setLogin({\n        loggedIn: true\n      })); // redirect to home page\n    } else {\n      setIsError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-header-text\",\n        children: \"Join our stock community!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-header-subtext\",\n        children: \"Download free photos and videos powered by the best photographers.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-input-label\",\n          children: \"USERNAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `login-input ${isError ? \"login-input-error\" : \"\"}`,\n          placeholder: \"Enter username here . . .\",\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          onChange: handleChange,\n          value: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-input-error-message\",\n          children: isError && \"There is something wrong!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-input-label\",\n          children: \"PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `login-input ${isError ? \"login-input-error\" : \"\"}`,\n          placeholder: \"Enter password here . . .\",\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          onChange: handleChange,\n          value: user.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-input-error-message\",\n          children: isError && \"There is something wrong!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-dark\",\n        type: \"submit\",\n        children: \"LOG IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"Y18xWhxWGFBD5w2frUSF06bG/Lw=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/blago/Desktop/valtech-task/valstock/src/pages/Login/Login.js"],"names":["LoginFooter","useState","useDispatch","setNotification","useNavigate","Gallery","Navbar","setLogin","USERNAME","PASSWORD","Login","navigate","user","setUser","username","password","isError","setIsError","isLogged","setIsLogged","dispatch","handleChange","e","prevUser","target","name","value","handleSubmit","preventDefault","open","setTimeout","loggedIn"],"mappings":"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","sourcesContent":["import \"./Login.css\";\r\nimport LoginFooter from \"./LoginFooter/LoginFooter\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setNotification } from \"../../redux/notification/notificationSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Gallery from \"../Gallery/Gallery\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport { setLogin } from \"../../redux/login/loginSlice\";\r\n\r\n// In a real app, we would make a request to backend to login, but here we are using predefined values to mimic a login functionality\r\nconst USERNAME = \"blagojpejovski\";\r\nconst PASSWORD = \"valstock123\";\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState({ username: \"\", password: \"\" });\r\n    const [isError, setIsError] = useState(false);\r\n    const [isLogged, setIsLogged] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n        setUser((prevUser) => ({\r\n            ...prevUser,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n        setIsError(false);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (user.username === USERNAME && user.password === PASSWORD) {\r\n            dispatch(setNotification({ open: true }));\r\n            setTimeout(() => {\r\n                dispatch(setNotification({ open: false }));\r\n            }, 2000);\r\n            navigate(\"/gallery\");\r\n            dispatch(setLogin({ loggedIn: true }));\r\n            // redirect to home page\r\n        } else {\r\n            setIsError(true);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-header\">\r\n                <div className=\"login-header-text\">\r\n                    Join our stock community!\r\n                </div>\r\n                <div className=\"login-header-subtext\">\r\n                    Download free photos and videos powered by the best\r\n                    photographers.\r\n                </div>\r\n            </div>\r\n            <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <div className=\"login-input-label\">USERNAME</div>\r\n                    <input\r\n                        className={`login-input ${isError ? \"login-input-error\" : \"\"\r\n                            }`}\r\n                        placeholder=\"Enter username here . . .\"\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        onChange={handleChange}\r\n                        value={user.username}\r\n                    />\r\n                    <div className=\"login-input-error-message\">\r\n                        {isError && \"There is something wrong!\"}\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <div className=\"login-input-label\">PASSWORD</div>\r\n                    <input\r\n                        className={`login-input ${isError ? \"login-input-error\" : \"\"\r\n                            }`}\r\n                        placeholder=\"Enter password here . . .\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        onChange={handleChange}\r\n                        value={user.password}\r\n                    />\r\n                    <div className=\"login-input-error-message\">\r\n                        {isError && \"There is something wrong!\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"button-dark\" type=\"submit\">\r\n                    LOG IN\r\n                </button>\r\n            </form>\r\n\r\n            <LoginFooter />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}